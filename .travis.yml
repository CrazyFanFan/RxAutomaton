env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - XCPROJ="-workspace RxAutomaton.xcworkspace -scheme RxAutomaton"

osx_image: xcode10.1

matrix:
  include:
    - os: osx
      language: objective-c
      script:
        - set -o pipefail
        - xcodebuild build-for-testing test-without-building -destination 'platform=OS X' ENABLE_TESTABILITY=YES $XCPROJ | xcpretty
      env:
        - JOB=xcodebuild-macOS

    - os: osx
      language: objective-c
      script:
        - set -o pipefail
        - xcodebuild build-for-testing test-without-building -destination 'platform=iOS Simulator,name=iPhone XS' ENABLE_TESTABILITY=YES $XCPROJ | xcpretty
      env:
        - JOB=xcodebuild-iOS

    - os: osx
      language: objective-c
      script:
        - set -o pipefail
        - xcodebuild build-for-testing test-without-building -destination 'platform=tvOS Simulator,name=Apple TV 4K' ENABLE_TESTABILITY=YES $XCPROJ | xcpretty
      env:
        - JOB=xcodebuild-tvOS

    - os: osx
      language: objective-c
      script:
        - set -o pipefail
        - xcodebuild build -destination 'platform=watchOS Simulator,name=Apple Watch Series 4 - 44mm' $XCPROJ | xcpretty
      env:
        - JOB=xcodebuild-watchOS

    # Comment-Out: Unknown CI failure (unreproducible in local)
    # https://travis-ci.org/inamiy/ReactiveAutomaton/jobs/492530708
    # - os: osx
    #   script:
    #     - pod repo update --silent
    #     - pod lib lint --allow-warnings
    #   env: JOB=pod-lint

    - os: osx
      language: generic
      script:
        - swift build
        - swift test
      env:
        - JOB=swiftpm-mac

    # 2017/04/16 Temporary Comment-Out:
    # `swift build` doesn't work on Linux (Swift 3.1).
    # See https://travis-ci.org/inamiy/RxAutomaton/jobs/222546274
    #
    # ```
    # /home/travis/build/inamiy/RxAutomaton/.build/checkouts/RxSwift.git-77973592786467360/Sources/RxCocoa/URLSession+Rx.swift:144:76: error: 'Error' is not convertible to 'NSError'; did you mean to use 'as!' to force downcast?
    #                 print(convertResponseToString(response, error.map { $0 as NSError }, interval))
    #                                                                     ~~~^~~~~~~~~~
    #                                                                       as!
    # ```

    #- os: linux
    #  language: generic
    #  sudo: required
    #  dist: trusty
    #  before_install:
    #    - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/#raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
    #  script:
    #    - swift build
    #    - SWIFTPM_TEST=YES swift test
    #  env: JOB=swiftpm-linux
